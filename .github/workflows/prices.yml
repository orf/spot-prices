name: Get Spot Pricing History

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'

concurrency:
  group: fetch-spot-prices

permissions:
  id-token: write
  contents: write
jobs:
  update:
    runs-on: ubuntu-latest
    if: github.repository == 'orf/spot-prices'
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-1
          mask-aws-account-id: true
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"
      - run: poetry install
      - run: poetry run python -m spot_prices_fetcher fetch
      - uses: EndBug/add-and-commit@v9
        with:
          add: 'spot_price_data/ state.json'
          default_author: github_actions
          message: 'Update Data'
          push: true

  bundle:
    runs-on: ubuntu-latest
    needs: update
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - run: |
          wget -q https://github.com/duckdb/duckdb/releases/download/v0.10.0/duckdb_cli-linux-amd64.zip
          unzip duckdb_cli-linux-amd64.zip
      - run: ./duckdb < export.sql
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DD
          utcOffset: "+00:00"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          name: |
            ${{ steps.current-time.outputs.formattedTime }}
          files: 'history.parquet'
          body: |
            Automated bundling of release data into a sqlite database. 
            Updated on ${{ steps.current-time.outputs.formattedTime }}
            See the readme for more information.
